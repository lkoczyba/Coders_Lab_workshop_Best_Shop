@use '../settings/mixins';
@use '../settings/variables';
@use '../settings/colors';

.benefits {
  &__container {
    padding: 0 30px;
  }

  .benefits-box {
    height: 370px;
    background-color: colors.$color-neutral-lightest;
    margin: 30px auto;
    border-radius: 5px;

    &--reversed {
      @include mixins.breakpoint('min-width', 'lg') {
        flex-direction: row-reverse;
      }
    }

    &--flex {
      display: flex;
      flex-direction: column-reverse;
      justify-content: space-between;
      gap: 20px;
      height: fit-content;
      @include mixins.breakpoint('min-width', 'lg') {
        flex-direction: row;
        gap: 60px;
        background-color: transparent;
        height: 370px;
      }
    }

    &__text-wrapper {
      order: 2;
      padding: 0 15px;
      @include mixins.breakpoint('min-width', 'lg') {
        order: unset;
      }

      &--wider {
        @include mixins.breakpoint('min-width', 'lg') {
          background-color: white;
          border-radius: 5px;
        }
      }
    }

    &__text {
      font-family: variables.$ff-secondary;
      font-size: variables.$fs-text-s;
      @include mixins.breakpoint('min-width', 'lg') {
        font-size: variables.$fs-text-m;
        margin: 30px 0 50px;
        &:after {
          display: block;
          content: '';
          width: 70%;
          height: 5px;
          margin-top: 50px;
          border-radius: 2px;
        }
        &--primary {
          &:after {
            background-color: colors.$color-primary;
          }
        }
        &--secondary {
          &:after {
            background-color: colors.$color-secondary;
          }
        }
        &--tertiary {
          &:after {
            background-color: colors.$color-tertiary;
          }
        }
      }
    }

    &__title {
      font-size: variables.$fs-title-s;
      font-weight: bold;
      margin: 20px 0;
      @include mixins.breakpoint('min-width', 'lg') {
        margin: 70px 0 30px;
        width: 70%;
      }
    }

    &__image-wrapper {
      position: relative;
      height: 180px;
      @include mixins.breakpoint('min-width', 'lg') {
        height: 100%;
      }

      &:before {
        position: absolute;
        left: 50%;
        top: 50%;
        display: block;
        content: "";
      }

      &--macbook {
        &:before {
          height: 100px;
          width: 100px;
          transform: translate(calc(-50% + 40px), calc(-50% - 20px)) rotate(45deg);
          border-radius: 41px;
          background-color: colors.$color-secondary;
          @include mixins.breakpoint('min-width', 'lg') {
            height: 170px;
            width: 170px;
            transform: translate(calc(-50% + 90px), calc(-50% - 60px)) rotate(45deg);
          }
        }
      }

      &--iPhone {
        &:before {
          height: 150px;
          width: 150px;
          transform: translate(calc(-50% + 0px), calc(-50% + 0px)) rotate(45deg);
          border-radius: 50%;
          background-color: colors.$color-primary;
          @include mixins.breakpoint('min-width', 'lg') {
            height: 320px;
            width: 320px;
            transform: translate(calc(-50% - 70px), calc(-50% - 10px));
          }
        }
      }

      &--trumpet {
        background-color: colors.$color-tertiary;
        border-radius: 5px;
        @include mixins.breakpoint('min-width', 'lg') {
          width: 40%;
          flex-shrink: 0;
          flex-grow: 1;
        }
      }

    }

    &__image {
      display: block;
      margin: 0 auto;

      &--macbook {
        width: 192px;
        transform: translate(-10px, 40px);
        @include mixins.breakpoint('min-width', 'lg') {
          width: 350px;
          transform: translate(-10px, 80px);
        }
      }

      &--iPhone {
        width: 175px;
        transform: translate(30px, 30px);
        @include mixins.breakpoint('min-width', 'lg') {
          width: 420px;
          transform: translate(-10px, 30px);
        }
      }

      &--trumpet {
        width: 250px;
        transform: translate(0px, 30px);
        @include mixins.breakpoint('min-width', 'lg') {
          transform: translate(-10px, 100px);
        }
      }

    }
  }
}
