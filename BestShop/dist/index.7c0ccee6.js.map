{"mappings":"AAAA,eAAe;AACf,MAAM,OAAO;IACT,UAAU,SAAS,eAAe;IAClC,QAAQ,SAAS,eAAe;IAChC,SAAS,SAAS,eAAe;IACjC,YAAY,SAAS,eAAe;IACpC,UAAU,SAAS,eAAe;AACtC;AAEA,kBAAkB;AAClB,MAAM,UAAU;IACZ,UAAU,SAAS,cAAc;IACjC,QAAQ,SAAS,cAAc;IAC/B,SAAS,SAAS,cAAc;IAChC,YAAY,SAAS,cAAc;IACnC,UAAU,SAAS,cAAc;IACjC,YAAY,SAAS,cAAc;AACvC;AAEA,gBAAgB;AAChB,MAAM,SAAS;IACX,UAAU;IACV,QAAQ;IACR,SAAS;QACL,SAAS;QACT,cAAc;QACd,OAAO;IACX;IACA,YAAY;IACZ,UAAU;AACd;AAEA,mBAAmB;AACnB,IAAI,mBAAmB;IACnB,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,UAAU;AACd;AAEA,SAAS,aAAa,YAAY;IAC9B,aAAa,iBAAiB,aAAa,SAAS,YAAY,UAAU,SAAS,SAAU,CAAC;QAC1F,IAAI,eAAe,EAAE;QACrB,OAAQ,aAAa;YACjB,KAAK;gBACD,IAAI,CAAC,UAAU,OAAO;gBACtB,IAAI,EAAE,OAAO,YAAY,MAAM;oBAC3B,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,aAAa,cAAc;oBAChF,YAAY,CAAC,EAAE,GAAG,EAAE,OAAO;oBAC3B,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrD;gBACA;YACJ,KAAK;gBACD,IAAI,IAAI,CAAC,SAAS;oBACd,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG;oBAC3C,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrD,OACI,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG;gBAEhC;YACJ,KAAK;gBACD,IAAI,IAAI,CAAC,iBAAiB;oBACtB,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG;oBACxD,YAAY,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACvD,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrD,OACI,MAAM;gBAEV;QACR;QACA,uBAAuB,cAAc,OAAO,CAAC,IAAI,CAAC,GAAG;QACrD,kBAAkB,kBAAiB,QAAQ;IAC/C;AACJ;AAEA,SAAS,uBAAuB,YAAY,EAAE,cAAc;IACxD,IAAI,aAAa,SAAO,GAAG;QACvB,eAAe,UAAU,IAAI;QAC7B,aAAa,QAAQ,CAAC,MAAK;YACvB,eAAe,QAAQ,CAAC,QAAM,EAAE,CAAC,cAAc,YAAY,CAAC,MAAM;QACtE;IACJ,OACI,eAAe,UAAU,OAAO;AAExC;AAEA,SAAS,kBAAkB,eAAe,EAAE,cAAc;IACtD,eAAe,QAAQ,CAAC,EAAE,CAAC,cAAY,MAAK,OAAO,OAAO,iBAAiB,OAAO,CAAC,OAAM,OAAO,QAAM,MAAK;AAC/G;AAEA,OAAO,KAAK,MAAM,QAAQ,CAAA;IACtB,aAAa,IAAI,CAAC,IAAI;AAC1B","sources":["app.js"],"sourcesContent":["//form elements\nconst form = {\n    products: document.getElementById('products'),\n    orders: document.getElementById('orders'),\n    package: document.getElementById('package'),\n    accounting: document.getElementById('accounting'),\n    terminal: document.getElementById('terminal')\n};\n\n//summary elements\nconst summary = {\n    products: document.querySelector('[data-id=products]'),\n    orders: document.querySelector('[data-id=orders]'),\n    package: document.querySelector('[data-id=package]'),\n    accounting: document.querySelector('[data-id=accounting]'),\n    terminal: document.querySelector('[data-id=terminal]'),\n    totalPrice: document.querySelector('#total-price')\n};\n\n//default prices\nconst prices = {\n    products: 0.5,\n    orders: 0.25,\n    package: {\n        premium: 60,\n        professional: 25,\n        basic: 0\n    },\n    accounting: 35,\n    terminal: 5\n};\n\n//prices calculated\nlet pricesCalculated = {\n    products: 0,\n    orders: 0,\n    package: 0,\n    accounting: 0,\n    terminal: 0\n}\n\nfunction processInput(inputElement) {\n    inputElement.addEventListener(inputElement.type === undefined ? 'click' : 'input', function (e) {\n        let displayArray = [];\n        switch (inputElement.type) {\n            case undefined:\n                this.classList.toggle('open');\n                if (e.target.tagName === 'LI') {\n                    pricesCalculated[this.id] = prices[this.id][e.target.getAttribute('data-value')];\n                    displayArray[0] = e.target.textContent;\n                    displayArray[1] = `$${pricesCalculated[this.id]}`;\n                }\n                break;\n            case 'checkbox':\n                if (this.checked) {\n                    pricesCalculated[this.id] = prices[this.id];\n                    displayArray[0] = `$${pricesCalculated[this.id]}`;\n                } else {\n                    pricesCalculated[this.id] = 0;\n                }\n                break;\n            case 'number':\n                if (this.checkValidity()) {\n                    pricesCalculated[this.id] = this.value * prices[this.id];\n                    displayArray[0] = `${this.value} * $${prices[this.id]}`;\n                    displayArray[1] = `$${pricesCalculated[this.id]}`;\n                }else{\n                    alert('Value must be greater than zero and be an integer');\n                }\n                break;\n        }\n        displayCalculatedPrice(displayArray, summary[this.id]);\n        displayTotalPrice(pricesCalculated,summary.totalPrice);\n    });\n}\n\nfunction displayCalculatedPrice(displayArray, summaryElement) {\n    if (displayArray.length>0) {\n        summaryElement.classList.add('open');\n        displayArray.forEach((item,index)=>{\n            summaryElement.children[index+1].textContent = displayArray[index];\n        });\n    } else {\n        summaryElement.classList.remove('open');\n    }\n}\n\nfunction displayTotalPrice(calculatedPrice, summaryElement) {\n    summaryElement.children[1].textContent='$'+ Object.values(calculatedPrice).reduce((total,item)=>total+item,0);\n}\n\nObject.keys(form).forEach(key => {\n    processInput(form[key]);\n});\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}